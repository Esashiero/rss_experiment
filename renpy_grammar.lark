?start: _NEWLINE? statement*

?statement: label
          | command
          | variable_assignment
          | dialogue
          | if_statement
          | menu
          | "return" -> return_statement

label: "label" IDENTIFIER ":" block
block: _NEWLINE _INDENT statement+ _DEDENT

// The 'args' rule is now optional WITHIN this rule, which is the correct way.
command: ("scene" | "show" | "hide" | "play" | "stop" | "jump" | "snapshot") (args)? _NEWLINE
variable_assignment: "$" expression _NEWLINE
dialogue: IDENTIFIER STRING _NEWLINE
// 'args', 'expression', and 'condition' now use .+ to require at least one character.
args: /(.+)/
expression: /(.+)/

menu: "menu" ":" _NEWLINE _INDENT choice+ _DEDENT
choice: STRING ":" block

if_statement: "if" condition ":" block elif_statement* else_statement?
elif_statement: _NEWLINE? "elif" condition ":" block
else_statement: _NEWLINE? "else" ":" block
condition: /(.+)/

// Terminals
_NEWLINE: ( /\r?\n[\t ]*/ )+
_INDENT: "INDENT"
_DEDENT: "DEDENT"

%import common.CNAME -> IDENTIFIER
%import common.ESCAPED_STRING -> STRING
%import common.SH_COMMENT -> COMMENT
%import common.WS_INLINE

%ignore COMMENT
%ignore WS_INLINE